// Code generated by MockGen. DO NOT EDIT.
// Source: finalizers.go

// Package finalizers is a generated GoMock package.
package finalizers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/mresvanis/he-sample-operator/api/v1alpha1"
)

// MockUpdater is a mock of Updater interface.
type MockUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockUpdaterMockRecorder
}

// MockUpdaterMockRecorder is the mock recorder for MockUpdater.
type MockUpdaterMockRecorder struct {
	mock *MockUpdater
}

// NewMockUpdater creates a new mock instance.
func NewMockUpdater(ctrl *gomock.Controller) *MockUpdater {
	mock := &MockUpdater{ctrl: ctrl}
	mock.recorder = &MockUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUpdater) EXPECT() *MockUpdaterMockRecorder {
	return m.recorder
}

// AddDeletionFinalizer mocks base method.
func (m *MockUpdater) AddDeletionFinalizer(ctx context.Context, cr *v1alpha1.DeviceConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddDeletionFinalizer", ctx, cr)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddDeletionFinalizer indicates an expected call of AddDeletionFinalizer.
func (mr *MockUpdaterMockRecorder) AddDeletionFinalizer(ctx, cr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddDeletionFinalizer", reflect.TypeOf((*MockUpdater)(nil).AddDeletionFinalizer), ctx, cr)
}

// ContainsDeletionFinalizer mocks base method.
func (m *MockUpdater) ContainsDeletionFinalizer(cr *v1alpha1.DeviceConfig) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ContainsDeletionFinalizer", cr)
	ret0, _ := ret[0].(bool)
	return ret0
}

// ContainsDeletionFinalizer indicates an expected call of ContainsDeletionFinalizer.
func (mr *MockUpdaterMockRecorder) ContainsDeletionFinalizer(cr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ContainsDeletionFinalizer", reflect.TypeOf((*MockUpdater)(nil).ContainsDeletionFinalizer), cr)
}

// RemoveDeletionFinalizer mocks base method.
func (m *MockUpdater) RemoveDeletionFinalizer(ctx context.Context, cr *v1alpha1.DeviceConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveDeletionFinalizer", ctx, cr)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveDeletionFinalizer indicates an expected call of RemoveDeletionFinalizer.
func (mr *MockUpdaterMockRecorder) RemoveDeletionFinalizer(ctx, cr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveDeletionFinalizer", reflect.TypeOf((*MockUpdater)(nil).RemoveDeletionFinalizer), ctx, cr)
}
